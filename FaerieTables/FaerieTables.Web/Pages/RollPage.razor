@page "/roll"
@inject HttpClient Http

<h3>Roll Table</h3>

<div class="mb-3">
    <label>Select Table:</label>
    <select class="form-select" @bind="selectedTableId">
        <option value="">-- Select Table --</option>
        @if(tables != null)
        {
            @foreach (var t in tables)
            {
                <option value="@t.Id">@t.Title</option>
            }
        }
    </select>
</div>

<div class="mb-3">
    <label>Mode:</label>
    <select class="form-select" @bind="mode">
        <option value="row">Row</option>
        <option value="column">Column</option>
    </select>
</div>

<button class="btn btn-primary mb-3" @onclick="RollTable">Roll</button>

@if (rollResult != null)
{
    <h4>Roll Result</h4>
    <ul class="list-group">
        @foreach (var kvp in rollResult.Results)
        {
            <li class="list-group-item">@kvp.Key: @kvp.Value</li>
        }
    </ul>
}



@code {
    private List<TableDto>? tables;
    private Guid selectedTableId;
    private string mode = "row";
    private RollResponseDto? rollResult;

    protected override async Task OnInitializedAsync()
    {
        tables = await Http.GetFromJsonAsync<List<TableDto>>("/api/table");
    }

    private async Task RollTable()
    {
        if (selectedTableId == Guid.Empty)
            return;

        var rollRequest = new RollRequestDto
        {
            TableId = selectedTableId,
            Mode = mode,
            Overrides = new List<OverrideDto>()
        };

        var response = await Http.PostAsJsonAsync("/api/roll", rollRequest);
        if (response.IsSuccessStatusCode)
        {
            rollResult = await response.Content.ReadFromJsonAsync<RollResponseDto>();
        }
        else
        {
            // Handle error appropriately
        }
    }

    public class TableDto
    {
        public Guid Id { get; set; }
        public string Title { get; set; } = "";
    }

    public class RollRequestDto
    {
        public Guid TableId { get; set; }
        public string Mode { get; set; } = "";
        public List<OverrideDto>? Overrides { get; set; }
    }

    public class RollResponseDto
    {
        public Guid TableId { get; set; }
        public string TableTitle { get; set; } = "";
        public string Mode { get; set; } = "";
        public Dictionary<string, string> Results { get; set; } = new();
    }

    public class OverrideDto
    {
        public string Column { get; set; } = "";
        public string Value { get; set; } = "";
    }

    public class Roll
    {
        public Guid TableId { get; set; }
        public string TableTitle { get; set; } = "";
        public string Mode { get; set; } = "";
        public Dictionary<string, string> Results { get; set; } = new();
    }
}
